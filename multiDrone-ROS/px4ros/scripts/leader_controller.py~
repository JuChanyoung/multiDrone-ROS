#!/usr/bin/env python
import rospy
from std_msgs.msg import String

def main():
	rospy.init_node('px4ros_leader_control', anonymous=True)
	pub = rospy.Publisher('neighbour_position', String, queue_size=20)
	rate = rospy.Rate(10) # 10hz

	rospy.Subscriber("serial_data_received", String, decodeInfo)

#callback
def decodeInfo(data):
	global neighbour_one_lon
	global neighbour_one_lat
	global last_neighbour_one_lon
	global last_neighbour_one_lat

	if data.data:
		latStr = ""
		lonStr = ""
		i = 1
		if data.data[0] == "o":
			while i<len(data.data):
				if data.data[i] == "a":
					break
				lonStr += data.data[i]
				i += 1
			i += 1
			while i<len(data.data):
				if data.data[i] == "\n":
					break
				latStr += data.data[i]
				i += 1

		try:
			neighbour_one_lon = float(lonStr)
			neighbour_one_lat = float(latStr)

			last_neighbour_one_lon = neighbour_one_lon
			last_neighbour_one_lat = neighbour_one_lat
		except Exception, e:
			print "decode exception:", e
			neighbour_one_lon = last_neighbour_one_lon    #maybe 0.0
			neighbour_one_lat = last_neighbour_one_lat
	else:
		neighbour_one_lon = last_neighbour_one_lon    #maybe 0.0
		neighbour_one_lat = last_neighbour_one_lat
	
if __name__ == '__main__':
	neighbour_one_lat = 0.0
	neighbour_one_lon = 0.0
	last_neighbour_one_lon = 0.0
	last_neighbour_one_lat = 0.0
	
	main()

	print "neighbour lon:", neighbour_one_lon
	print "neighbour lat:", neighbour_one_lat


